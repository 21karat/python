对list进行切片
Python提供了切片（Slice）操作符，能大大简化这种操作。

取前3个元素，用一行代码就可以完成切片：
>>> L[0:3]
L[0:3]表示，从索引0开始取，直到索引3为止，但不包括索引3。即索引0，1，2，正好是3个元素。

如果第一个索引是0，还可以省略：
>>> L[:3]

也可以从索引1开始，取出2个元素出来：
>>> L[1:3]
只用一个 : ，表示从头到尾：
>>> L[:]
因此，L[:]实际上复制出了一个新list。


倒序切片
对于list，既然Python支持L[-1]取倒数第一个元素，那么它同样支持倒数切片

>>> L = ['Adam', 'Lisa', 'Bart', 'Paul']
>>> L[-2:]
['Bart', 'Paul']
>>> L[:-2]
['Adam', 'Lisa']
>>> L[-3:-1]
['Lisa', 'Bart']
>>> L[-4:-1:2]
['Adam', 'Bart']

记住倒数第一个元素的索引是-1。倒序切片包含起始索引，不包含结束索引。

切片操作还可以指定第三个参数：
>>> L[::2]
['Adam', 'Bart']
第三个参数表示每N个取一个，上面的 L[::2] 会每两个元素取出一个来，也就是隔一个取一个。

把list换成tuple，切片操作完全相同，只是切片的结果也变成了tuple。


字符串有个方法 upper() 可以把字符变成大写字母